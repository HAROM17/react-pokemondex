{"ast":null,"code":"import _regeneratorRuntime from\"D:/React_Dev/curso-react/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/React_Dev/curso-react/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";export function getPokemons(){return _getPokemons.apply(this,arguments);}/* TODO:Correguir textos con su nombre correcto */function _getPokemons(){_getPokemons=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,datos,pokemons,unicosPokemons;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"https://unpkg.com/pokemons@1.1.0/pokemons.json\");case 2:response=_context.sent;_context.next=5;return response.json();case 5:datos=_context.sent;pokemons=datos.results.map(function(pokemon){return{name:pokemon.name,id:pokemon.national_number,imggif:CorreguirNombre(pokemon.sprites['animated']),imgnormal:CorreguirNombre(pokemon.sprites['normal']),imglarge:CorreguirNombre(pokemon.sprites['large']),total:pokemon.total,hp:pokemon.hp,attack:pokemon.attack,defense:pokemon.defense,sp_atk:pokemon.sp_atk,sp_def:pokemon.sp_def,speed:pokemon.speed,type:pokemon.type[0]};});unicosPokemons=pokemons.filter(function(pokemon,index){return pokemons.findIndex(function(other){return other.id===pokemon.id;})===index;});return _context.abrupt(\"return\",unicosPokemons);case 9:case\"end\":return _context.stop();}}},_callee);}));return _getPokemons.apply(this,arguments);}export function CorreguirNombre(name){if(name.includes(\"farfetch'd\")){return name.replace(\"farfetch'd\",\"farfetchd\");}else if(name.includes(\"mr.-mime\")){return name.replace(\"mr.-mime\",\"mr-mime\");}else if(name.includes(\"♂\")){return name.replace(\"♂\",\"-m\");}else if(name.includes(\"♀\")){return name.replace(\"♀\",\"-f\");}else{return name;}}","map":{"version":3,"names":["getPokemons","fetch","response","json","datos","pokemons","results","map","pokemon","name","id","national_number","imggif","CorreguirNombre","sprites","imgnormal","imglarge","total","hp","attack","defense","sp_atk","sp_def","speed","type","unicosPokemons","filter","index","findIndex","other","includes","replace"],"sources":["D:/React_Dev/curso-react/src/controller/getpokemon.tsx"],"sourcesContent":["import {Pokemon} from '../models/pokemon.m';\r\n\r\nexport async function getPokemons(): Promise<Pokemon[]> {\r\n    /* TODO:LLamando a API REST */\r\n    /* TODO: API FETCH La API Fetch proporciona una interfaz JavaScript para acceder y manipular partes del canal HTTP, tales como peticiones y respuestas. */\r\n    const response = await fetch(\"https://unpkg.com/pokemons@1.1.0/pokemons.json\");\r\n\r\n    const datos = await response.json();\r\n    const pokemons = datos.results.map((pokemon:any) => ({\r\n        name: pokemon.name,\r\n        id: pokemon.national_number,\r\n        imggif: CorreguirNombre(pokemon.sprites['animated']),\r\n        imgnormal: CorreguirNombre(pokemon.sprites['normal']),\r\n        imglarge: CorreguirNombre(pokemon.sprites['large']),\r\n        total: pokemon.total,\r\n        hp: pokemon.hp,\r\n        attack: pokemon.attack,\r\n        defense: pokemon.defense,\r\n        sp_atk: pokemon.sp_atk,\r\n        sp_def: pokemon.sp_def,\r\n        speed: pokemon.speed,\r\n        type: pokemon.type[0]\r\n    }));\r\n\r\n    const unicosPokemons = pokemons.filter(\r\n        (pokemon: any,index: number)=>\r\n        pokemons.findIndex((other:any) => other.id === pokemon.id) === index\r\n    );\r\n\r\n    return unicosPokemons;\r\n}\r\n\r\n/* TODO:Correguir textos con su nombre correcto */\r\nexport function CorreguirNombre(name: string): string{\r\n    if (name.includes(\"farfetch'd\")){\r\n        return name.replace(\"farfetch'd\",\"farfetchd\");\r\n    }else if (name.includes(\"mr.-mime\")){\r\n        return name.replace(\"mr.-mime\",\"mr-mime\");\r\n    }else if (name.includes(\"♂\")){\r\n        return name.replace(\"♂\",\"-m\");\r\n    }else if (name.includes(\"♀\")){\r\n        return name.replace(\"♀\",\"-f\");\r\n    }else{\r\n        return name;\r\n    }\r\n}"],"mappings":"4OAEA,eAAsBA,YAAW,8CA8BjC,iJA9BO,sMAGoBC,MAAK,CAAC,gDAAgD,CAAC,QAAxEC,QAAQ,qCAEMA,SAAQ,CAACC,IAAI,EAAE,QAA7BC,KAAK,eACLC,QAAQ,CAAGD,KAAK,CAACE,OAAO,CAACC,GAAG,CAAC,SAACC,OAAW,QAAM,CACjDC,IAAI,CAAED,OAAO,CAACC,IAAI,CAClBC,EAAE,CAAEF,OAAO,CAACG,eAAe,CAC3BC,MAAM,CAAEC,eAAe,CAACL,OAAO,CAACM,OAAO,CAAC,UAAU,CAAC,CAAC,CACpDC,SAAS,CAAEF,eAAe,CAACL,OAAO,CAACM,OAAO,CAAC,QAAQ,CAAC,CAAC,CACrDE,QAAQ,CAAEH,eAAe,CAACL,OAAO,CAACM,OAAO,CAAC,OAAO,CAAC,CAAC,CACnDG,KAAK,CAAET,OAAO,CAACS,KAAK,CACpBC,EAAE,CAAEV,OAAO,CAACU,EAAE,CACdC,MAAM,CAAEX,OAAO,CAACW,MAAM,CACtBC,OAAO,CAAEZ,OAAO,CAACY,OAAO,CACxBC,MAAM,CAAEb,OAAO,CAACa,MAAM,CACtBC,MAAM,CAAEd,OAAO,CAACc,MAAM,CACtBC,KAAK,CAAEf,OAAO,CAACe,KAAK,CACpBC,IAAI,CAAEhB,OAAO,CAACgB,IAAI,CAAC,CAAC,CACxB,CAAC,EAAC,CAAC,CAEGC,cAAc,CAAGpB,QAAQ,CAACqB,MAAM,CAClC,SAAClB,OAAY,CAACmB,KAAa,QAC3BtB,SAAQ,CAACuB,SAAS,CAAC,SAACC,KAAS,QAAKA,MAAK,CAACnB,EAAE,GAAKF,OAAO,CAACE,EAAE,GAAC,GAAKiB,KAAK,GACvE,iCAEMF,cAAc,wDACxB,8CAGD,MAAO,SAASZ,gBAAe,CAACJ,IAAY,CAAS,CACjD,GAAIA,IAAI,CAACqB,QAAQ,CAAC,YAAY,CAAC,CAAC,CAC5B,MAAOrB,KAAI,CAACsB,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,CACjD,CAAC,IAAK,IAAItB,IAAI,CAACqB,QAAQ,CAAC,UAAU,CAAC,CAAC,CAChC,MAAOrB,KAAI,CAACsB,OAAO,CAAC,UAAU,CAAC,SAAS,CAAC,CAC7C,CAAC,IAAK,IAAItB,IAAI,CAACqB,QAAQ,CAAC,GAAG,CAAC,CAAC,CACzB,MAAOrB,KAAI,CAACsB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CACjC,CAAC,IAAK,IAAItB,IAAI,CAACqB,QAAQ,CAAC,GAAG,CAAC,CAAC,CACzB,MAAOrB,KAAI,CAACsB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CACjC,CAAC,IAAI,CACD,MAAOtB,KAAI,CACf,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}